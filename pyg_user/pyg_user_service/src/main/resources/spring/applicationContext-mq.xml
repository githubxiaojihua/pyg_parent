<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 把activeMQ消息服务器交给spring管理 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<constructor-arg name="brokerURL" value="tcp://192.168.25.132:61616"></constructor-arg>
	</bean>

	<!-- 指定消息发送目的地 -->
	<bean id="sms" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="sms"></constructor-arg>
	</bean>

	<!-- 配置activemq消息重发机制-->
	<!-- 配置重发策略-->
	<bean id="bizRedeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
		<!-- 重发次数 延时、延时系数、延时指数开关、目标（重发等待时间1s, 2s, 4s, 8s） -->
		<property name="maximumRedeliveries" value="3" />
		<property name="redeliveryDelay" value="1000" />
		<property name="backOffMultiplier" value="2" />
		<property name="useExponentialBackOff" value="true" />
		<property name="destination" ref="sms" />
	</bean>
	<!--这里设置各个消息队列的重发机制 -->
	<bean id="redeliveryPolicyMap"
		  class="org.apache.activemq.broker.region.policy.RedeliveryPolicyMap">
		<property name="redeliveryPolicyEntries">
			<list>
				<ref bean="bizRedeliveryPolicy" />
			</list>
		</property>
	</bean>

	<!-- 配置activemq pool-->
	<!-- ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory
		可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗。 要依赖于 activemq-pool包 -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="3000" />
	</bean>

	<!-- 把消息服务器交给spring jms模块管理 -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory" ref="pooledConnectionFactory"></property>
		<property name="reconnectOnException" value="true" />
	</bean>
	<!-- spring jms提供消息发送模版对象 -->
	<bean class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"></property>
<!--
		<property name="pubSubDomain" value="true"></property>
-->
		<property name="defaultDestination" ref="sms"></property>
	</bean>
	<!-- 指定消息发送目的地 原来使用springboot的时候配置的-->
	<!--<bean class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="add_update_del_topic"></constructor-arg>
	</bean>-->
</beans>